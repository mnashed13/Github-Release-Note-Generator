name: Generate and Send Release Notes

on:
  release:
    types: [published]

jobs:
  generate-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Create output directory
        run: mkdir -p output

      - name: Get previous release tag
        id: prev_release
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 ${{ github.event.release.tag_name }}^)
          echo "PREV_TAG=$PREV_TAG" >> $GITHUB_ENV

      - name: Generate release notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_OWNER: ${{ github.repository_owner }}
          GITHUB_REPO: ${{ github.event.repository.name }}
          END_VERSION: ${{ github.event.release.tag_name }}
          START_VERSION: ${{ env.PREV_TAG }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
          EMAIL_CC: ${{ secrets.EMAIL_CC }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_SECURE: ${{ secrets.SMTP_SECURE }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
        run: node releaseNoteGenerator.js

      - name: Upload release notes as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: |
            output/release-notes-*.pdf
            output/release-notes-*.md
            output/release-notes-*.eml
          retention-days: 30

      - name: Send email notification
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_OWNER: ${{ github.repository_owner }}
          GITHUB_REPO: ${{ github.event.repository.name }}
          END_VERSION: ${{ github.event.release.tag_name }}
          START_VERSION: ${{ env.PREV_TAG }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
          EMAIL_CC: ${{ secrets.EMAIL_CC }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_SECURE: ${{ secrets.SMTP_SECURE }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
        run: |
          node -e '
          const generator = new (require("./releaseNoteGenerator"))();
          generator.generateReleaseNotes(
            process.env.END_VERSION,
            process.env.START_VERSION,
            { generateEmail: true, sendEmail: true }
          ).catch(console.error);
          '
